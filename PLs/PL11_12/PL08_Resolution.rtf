{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- ** eliminar tabelas se existentes **\
-- CASCADE CONSTRAINTS para eliminar as restri\'e7\'f5es de integridade das chaves prim\'e1rias e chaves \'fanicas\
-- PURGE elimina a tabela da base de dados e da "reciclagem"\
DROP TABLE marinheiro  CASCADE CONSTRAINTS PURGE;\
DROP TABLE barco       CASCADE CONSTRAINTS PURGE;\
DROP TABLE reserva     CASCADE CONSTRAINTS PURGE;\
\
-- ## tabela Marinheiro ##\
CREATE TABLE marinheiro(\
  idMarinheiro 	    INTEGER 	CONSTRAINT pkMarinheiroIdMarinheiro     PRIMARY KEY,\
  nome 	            VARCHAR(30)	CONSTRAINT nnMarinheiroNome             NOT NULL,\
  classificacao 	INTEGER		CONSTRAINT nnMarinheiroClassificacao    NOT NULL,\
  dataNascimento    DATE	    CONSTRAINT nnMarinheiroDataNascimento   NOT NULL\
);\
\
-- ## tabela Barco ##\
CREATE TABLE barco(\
  idBarco 	    INTEGER     CONSTRAINT pkBarcoIdBarco       PRIMARY KEY,\
  designacao    VARCHAR(20) CONSTRAINT nnBarcoDesignacao    NOT NULL,\
  cor           VARCHAR(10) CONSTRAINT nnBarcoCor           NOT NULL\
);\
\
-- ## tabela Reserva ##\
CREATE TABLE reserva(\
  idMarinheiro  INTEGER,\
  idBarco 	    INTEGER,\
  data 	        DATE        CONSTRAINT nnReservaData  NOT NULL, \
  \
  CONSTRAINT pkReservaIdMarinheiroIdBarcoData PRIMARY KEY(idMarinheiro, idBarco, data)\
);\
\
-- ** alterar tabelas para defini\'e7\'e3o de chaves estrangeiras **\
ALTER TABLE reserva ADD CONSTRAINT fkReservaIdMarinheiro FOREIGN KEY (idMarinheiro) REFERENCES marinheiro(idMarinheiro);\
ALTER TABLE reserva ADD CONSTRAINT fkReservaIdBarco      FOREIGN KEY (idBarco)      REFERENCES barco(idBarco);\
\
-- ** guardar em DEFINITIVO as altera\'e7\'f5es na base de dados, se a op\'e7\'e3o Autocommit do SQL Developer n\'e3o estiver ativada **\
-- COMMIT;\
\
-- ** inserir dados nas tabelas **\
\
-- ## tabela Marinheiro ##\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(22, 'Dustin',  7, TO_DATE('1975-09-13','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(29, 'Brutus',  1, TO_DATE('1987-06-02','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(31, 'Lubber',  8, TO_DATE('1965-03-17','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(32, 'Andy',    8, TO_DATE('1995-01-01','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(58, 'Rusty',  10, TO_DATE('1985-07-02','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(64, 'Hor\'e1cio', 7, TO_DATE('1985-03-17','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(71, 'Zorba',  10, TO_DATE('2004-02-19','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(74, 'Hor\'e1cio', 9, TO_DATE('1985-02-22','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(85, 'Art',     3, TO_DATE('1995-09-05','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(95, 'Bob',     3, TO_DATE('1957-08-12','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(13, 'Popeye',  3, TO_DATE('1998-06-23','yyyy-mm-dd'));\
INSERT INTO marinheiro(idMarinheiro, nome, classificacao, dataNascimento) VALUES(44, 'Haddock', 3, TO_DATE('1957-05-31','yyyy-mm-dd'));\
\
-- ## tabela Barco ##\
INSERT INTO barco(idBarco, designacao, cor) VALUES(101, 'Interlake', 'azul');\
INSERT INTO barco(idBarco, designacao, cor) VALUES(102, 'Interlake', 'vermelho');\
INSERT INTO barco(idBarco, designacao, cor) VALUES(103, 'Clipper',   'verde');\
INSERT INTO barco(idBarco, designacao, cor) VALUES(104, 'Marine',    'vermelho');\
\
-- ## tabela Reserva ##\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(22, 101, TO_DATE('2019/10/10','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(22, 102, TO_DATE('2019/10/10','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(22, 103, TO_DATE('2019/08/10','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(22, 104, TO_DATE('2019/07/10','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(31, 102, TO_DATE('2019/10/11','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(31, 103, TO_DATE('2019/06/11','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(31, 104, TO_DATE('2019/12/11','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(64, 101, TO_DATE('2019/05/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(64, 102, TO_DATE('2019/08/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(64, 102, TO_DATE('2019/09/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(64, 102, TO_DATE('2019/10/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(74, 103, TO_DATE('2019/08/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(44, 101, TO_DATE('2020/05/09','yyyy/mm/dd'));\
INSERT INTO reserva(idMarinheiro, idBarco, data) VALUES(44, 101, TO_DATE('2020/09/09','yyyy/mm/dd'));\
\
-- ** guardar em DEFINITIVO as altera\'e7\'f5es na base de dados, se a op\'e7\'e3o Autocommit do SQL Developer n\'e3o estiver ativada **\
-- COMMIT;\
\
--5.\
--A.\
--1)\
--a)\
select idmarinheiro, nome, classificacao from marinheiro \
where classificacao = (select max(classificacao) from marinheiro);\
\
--b)\
select idmarinheiro, nome, classificacao from marinheiro \
where classificacao >= ALL(select classificacao from marinheiro);\
\
--c)\
select idmarinheiro, nome, classificacao from marinheiro\
inner join (select max(classificacao) as classmax from marinheiro mar) on classificacao = classmax;\
\
--2)\
--a)\
select idmarinheiro, nome from marinheiro \
where idmarinheiro not in (select idmarinheiro from reserva) \
order by idmarinheiro asc;\
\
--b)\
select idmarinheiro, nome from marinheiro \
where NOT (idmarinheiro = any (select idmarinheiro from reserva))\
order by idmarinheiro asc;\
\
--c)\
select m.idmarinheiro, m.nome from marinheiro m \
minus \
select mar.idmarinheiro, mar.nome from marinheiro mar\
inner join reserva r on mar.idmarinheiro = r.idmarinheiro;\
\
--3)\
select count(*) as qtd_marinheiro from (select r.idmarinheiro from reserva r\
                                                    inner join barco b on r.idbarco = b.idbarco\
                                                    where upper(b.cor) = 'VERMELHO'\
                                                    intersect\
                                        select r1.idmarinheiro from reserva r1\
                                                    inner join barco b1 on r1.idbarco = b1.idbarco\
                                                    where upper(b1.cor) = 'VERDE');\
                                                    \
--B.\
--4)\
select m.idmarinheiro, m.nome , count(r.idmarinheiro) as qtd_reservas\
from marinheiro m\
left join reserva r on m.idmarinheiro = r.idmarinheiro\
group by m.idmarinheiro, m.nome\
order by qtd_reservas desc;\
\
-- ou\
\
select m.idmarinheiro, m.nome, (select count(*) from reserva r\
                                where r.idmarinheiro = m.idmarinheiro) as qtd_reservas\
from marinheiro m\
order by 3 desc;\
\
--5) N\'e3o est\'e1 feito, n\'e3o consegui\
select m.idmarinheiro, b.idbarco, (select count(*) from reserva r\
                                    where r.idmarinheiro = m.idmarinheiro) as qtd_reservas\
from marinheiro m, barco b\
group by m.idmarinheiro, b.idbarco\
having count(qtd_reservas) > (select avg(b.idbarco) from reserva r\
                                    where r.idmarinheiro = m.idmarinheiro)\
order by m.idmarinheiro;\
\
\
select b.idbarco, count(*) as qtd_reserva_barco\
from barco b, reserva r\
where b.idbarco = r.idbarco\
group by b.idbarco;\
\
}